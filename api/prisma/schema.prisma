// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  email     String
  password  String
  verified  Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  Comment   Comment[]

  @@map("users")
}

model Comment {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  userId  String
  user    User   @relation(fields: [userId], references: [id])
  movieId String
  movie   Movie  @relation(fields: [movieId], references: [id])

  @@map("comments")
}

model Movie {
  id          String    @id @default(cuid())
  name        String
  description String
  releaseDate DateTime
  duration    Int
  poster      String
  rating      Float
  views       Int
  author      String
  source      String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt

  categoryId String
  category   Category  @relation(fields: [categoryId], references: [id])
  tagId      String
  tag        Tag       @relation(fields: [tagId], references: [id])
  genreId    String
  genren     Genre     @relation(fields: [genreId], references: [id])
  Comment    Comment[]

  @@map("movie")
}

model Category {
  id        String    @id @default(cuid())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  Movie     Movie[]

  @@map("categories")
}

model Tag {
  id        String    @id @default(cuid())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  Movie     Movie[]

  @@map("tags")
}

model Genre {
  id    String  @id @default(cuid())
  name  String
  Movie Movie[]

  @@map("genres")
}
